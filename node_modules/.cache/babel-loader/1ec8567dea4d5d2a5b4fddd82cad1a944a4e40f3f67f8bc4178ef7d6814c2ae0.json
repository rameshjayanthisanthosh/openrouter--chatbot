{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rmang\\\\openrouter-chatbot\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  // Scroll to bottom of chat\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n\n  // Handle API call to OpenRouter\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      role: 'user',\n      content: input\n    };\n    setMessages([...messages, userMessage]);\n    setInput('');\n    setLoading(true);\n    try {\n      const response = await fetch('https://openrouter.ai/api/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${process.env.REACT_APP_API_KEY}`,\n          'Content-Type': 'application/json',\n          'HTTP-Referer': window.location.href,\n          'X-Title': 'React Chatbot'\n        },\n        body: JSON.stringify({\n          model: 'openchat/openchat-7b',\n          messages: [...messages, userMessage]\n        })\n      });\n      const data = await response.json();\n      setMessages([...messages, userMessage, data.choices[0].message]);\n    } catch (error) {\n      console.error('Error:', error);\n      setMessages([...messages, userMessage, {\n        role: 'assistant',\n        content: 'ðŸš¨ Error: Failed to get response'\n      }]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"OpenRouter Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.role}`,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [msg.role === 'user' ? 'You' : 'AI', \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), \" \", msg.content]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message assistant\",\n          children: \"Thinking...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          sendMessage();\n        },\n        className: \"input-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"Type your message...\",\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading,\n          children: loading ? 'Sending...' : 'Send'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Dj2Fwf2x2Jq+kEf3LQn5UijOKhw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","App","_s","messages","setMessages","input","setInput","loading","setLoading","messagesEndRef","_messagesEndRef$curre","current","scrollIntoView","behavior","sendMessage","trim","userMessage","role","content","response","fetch","method","headers","process","env","REACT_APP_API_KEY","window","location","href","body","JSON","stringify","model","data","json","choices","message","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","ref","onSubmit","e","preventDefault","type","value","onChange","target","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/rmang/openrouter-chatbot/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\n\nconst App = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  // Scroll to bottom of chat\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  // Handle API call to OpenRouter\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n  \n    const userMessage = { role: 'user', content: input };\n    setMessages([...messages, userMessage]);\n    setInput('');\n    setLoading(true);\n  \n    try {\n      const response = await fetch('https://openrouter.ai/api/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${process.env.REACT_APP_API_KEY}`,\n          'Content-Type': 'application/json',\n          'HTTP-Referer': window.location.href,\n          'X-Title': 'React Chatbot'\n        },\n        body: JSON.stringify({\n          model: 'openchat/openchat-7b',\n          messages: [...messages, userMessage],\n        })\n      });\n  \n      const data = await response.json();\n      setMessages([...messages, userMessage, data.choices[0].message]);\n    } catch (error) {\n      console.error('Error:', error);\n      setMessages([...messages, userMessage, { \n        role: 'assistant', \n        content: 'ðŸš¨ Error: Failed to get response' \n      }]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>OpenRouter Chatbot</h1>\n      <div className=\"chat-container\">\n        <div className=\"messages\">\n          {messages.map((msg, index) => (\n            <div key={index} className={`message ${msg.role}`}>\n              <strong>{msg.role === 'user' ? 'You' : 'AI'}:</strong> {msg.content}\n            </div>\n          ))}\n          <div ref={messagesEndRef} />\n          {loading && <div className=\"message assistant\">Thinking...</div>}\n        </div>\n        <form onSubmit={(e) => {\n          e.preventDefault();\n          sendMessage();\n        }} className=\"input-form\">\n          <input\n            type=\"text\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            placeholder=\"Type your message...\"\n            disabled={loading}\n          />\n          <button type=\"submit\" disabled={loading}>\n            {loading ? 'Sending...' : 'Send'}\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}